build: construi

environment:
  - GIT_AUTHOR_NAME=ootp-ai
  - GIT_AUTHOR_EMAIL=levi.stephen@gmail.com
  - OOTPAI_DATA=/var/ootp-ai-data

volumes:
  - ./.m2:/root/.m2
  - ./.local:/root/.local

targets:
  build:
    run: mvn -B clean verify -Dgpg.skip=true -DaddScalacArgs=-feature

  clean: mvn -B clean

  install-java: mvn -B install -Dgpg.skip=true -DaddScalacArgs=-feature

  install-python:
    run:
      - pip install --user -r src/main/python/requirements.txt
      - cp -avr src/main/python/. target/

  install:
    before:
      - install-python
      - install-java

  update-versions: mvn -B versions:update-properties -DgenerateBackupPoms=false

  site: mvn -B -e clean site

  run:
    before:
      - install
    environment:
      - OOTPAI_SITE
      - OOTPAI_CLEAR_CACHE
      - OOTPAI_PLAYOFFS
      - SKIP_GIT_SYNC
      - GITHUB_TOKEN
    volumes:
      - ./ootp-ai-data:/var/ootp-ai-data
    run: /bin/bash construi/run/run.sh

  local-run:
    before:
      - install
    environment:
      - OOTPAI_SITE
      - OOTPAI_CLEAR_CACHE
      - OOTPAI_PLAYOFFS
      - SKIP_GIT_SYNC=true
    volumes:
      - ./ootp-ai-data:/var/ootp-ai-data
    run: /bin/bash construi/run/run.sh

  fmt:
    environment:
      - GOOGLE_JAVA_FORMAT_JAR=target/google-java-format-all-deps.jar
      - SCALAFMT_JAR=target/scalafmt/cli/target/scala-2.11/scalafmt.jar
    run:
      - mkdir -p target/scalafmt
      - /bin/bash -c "pip install --user yapf==0.13.1 && ~/.local/bin/yapf --recursive --in-place src/main/python"
      - /bin/bash -c '[[ -e "$GOOGLE_JAVA_FORMAT_JAR" ]] || curl -sSL https://github.com/google/google-java-format/releases/download/google-java-format-1.5/google-java-format-1.5-all-deps.jar -o $GOOGLE_JAVA_FORMAT_JAR'
      - /bin/bash -c 'find src -name *.java | xargs java -jar $GOOGLE_JAVA_FORMAT_JAR --replace'
      - /bin/bash -c '[[ -e "$SCALAFMT_JAR" ]] || (curl -sSL https://github.com/olafurpg/scalafmt/releases/download/v0.6.3/scalafmt.tar.gz | tar zxv -C target/scalafmt)'
      - /bin/bash -c 'java -jar $SCALAFMT_JAR --in-place'
